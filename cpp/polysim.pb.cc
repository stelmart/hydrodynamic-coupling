// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: polysim.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "polysim.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace polysim {

namespace {

const ::google::protobuf::Descriptor* SPolymer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SPolymer_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSim_reflection_ = NULL;
const ::google::protobuf::Descriptor* Settings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Settings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_polysim_2eproto() {
  protobuf_AddDesc_polysim_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "polysim.proto");
  GOOGLE_CHECK(file != NULL);
  SPolymer_descriptor_ = file->message_type(0);
  static const int SPolymer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SPolymer, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SPolymer, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SPolymer, z_),
  };
  SPolymer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SPolymer_descriptor_,
      SPolymer::default_instance_,
      SPolymer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SPolymer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SPolymer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SPolymer));
  SSystem_descriptor_ = file->message_type(1);
  static const int SSystem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSystem, poly_),
  };
  SSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SSystem_descriptor_,
      SSystem::default_instance_,
      SSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SSystem));
  SSim_descriptor_ = file->message_type(2);
  static const int SSim_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSim, system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSim, yolk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSim, settings_),
  };
  SSim_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SSim_descriptor_,
      SSim::default_instance_,
      SSim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSim, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSim, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SSim));
  Settings_descriptor_ = file->message_type(3);
  static const int Settings_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, h_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, sk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, pk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, stiffk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, shiftk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, oseenk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, basek_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, numpin_),
  };
  Settings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Settings_descriptor_,
      Settings::default_instance_,
      Settings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Settings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Settings));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_polysim_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SPolymer_descriptor_, &SPolymer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SSystem_descriptor_, &SSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SSim_descriptor_, &SSim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Settings_descriptor_, &Settings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_polysim_2eproto() {
  delete SPolymer::default_instance_;
  delete SPolymer_reflection_;
  delete SSystem::default_instance_;
  delete SSystem_reflection_;
  delete SSim::default_instance_;
  delete SSim_reflection_;
  delete Settings::default_instance_;
  delete Settings_reflection_;
}

void protobuf_AddDesc_polysim_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rpolysim.proto\022\007polysim\"+\n\010SPolymer\022\t\n\001"
    "x\030\001 \003(\001\022\t\n\001y\030\002 \003(\001\022\t\n\001z\030\003 \003(\001\"*\n\007SSystem"
    "\022\037\n\004poly\030\001 \003(\0132\021.polysim.SPolymer\"n\n\004SSi"
    "m\022 \n\006system\030\001 \003(\0132\020.polysim.SSystem\022\037\n\004y"
    "olk\030\003 \003(\0132\021.polysim.SPolymer\022#\n\010settings"
    "\030\002 \002(\0132\021.polysim.Settings\"|\n\010Settings\022\t\n"
    "\001h\030\010 \002(\001\022\n\n\002sk\030\001 \002(\001\022\n\n\002pk\030\002 \002(\001\022\016\n\006stif"
    "fk\030\003 \002(\001\022\016\n\006shiftk\030\004 \002(\001\022\016\n\006oseenk\030\005 \002(\001"
    "\022\r\n\005basek\030\006 \002(\001\022\016\n\006numpin\030\007 \002(\005", 351);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "polysim.proto", &protobuf_RegisterTypes);
  SPolymer::default_instance_ = new SPolymer();
  SSystem::default_instance_ = new SSystem();
  SSim::default_instance_ = new SSim();
  Settings::default_instance_ = new Settings();
  SPolymer::default_instance_->InitAsDefaultInstance();
  SSystem::default_instance_->InitAsDefaultInstance();
  SSim::default_instance_->InitAsDefaultInstance();
  Settings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_polysim_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_polysim_2eproto {
  StaticDescriptorInitializer_polysim_2eproto() {
    protobuf_AddDesc_polysim_2eproto();
  }
} static_descriptor_initializer_polysim_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SPolymer::kXFieldNumber;
const int SPolymer::kYFieldNumber;
const int SPolymer::kZFieldNumber;
#endif  // !_MSC_VER

SPolymer::SPolymer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polysim.SPolymer)
}

void SPolymer::InitAsDefaultInstance() {
}

SPolymer::SPolymer(const SPolymer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polysim.SPolymer)
}

void SPolymer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SPolymer::~SPolymer() {
  // @@protoc_insertion_point(destructor:polysim.SPolymer)
  SharedDtor();
}

void SPolymer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SPolymer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SPolymer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SPolymer_descriptor_;
}

const SPolymer& SPolymer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_polysim_2eproto();
  return *default_instance_;
}

SPolymer* SPolymer::default_instance_ = NULL;

SPolymer* SPolymer::New() const {
  return new SPolymer;
}

void SPolymer::Clear() {
  x_.Clear();
  y_.Clear();
  z_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SPolymer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polysim.SPolymer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double x = 1;
      case 1: {
        if (tag == 9) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_x())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(9)) goto parse_x;
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // repeated double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17, input, this->mutable_y())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // repeated double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_z())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_z())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polysim.SPolymer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polysim.SPolymer)
  return false;
#undef DO_
}

void SPolymer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polysim.SPolymer)
  // repeated double x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->x(i), output);
  }

  // repeated double y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->y(i), output);
  }

  // repeated double z = 3;
  for (int i = 0; i < this->z_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->z(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polysim.SPolymer)
}

::google::protobuf::uint8* SPolymer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polysim.SPolymer)
  // repeated double x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->x(i), target);
  }

  // repeated double y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(2, this->y(i), target);
  }

  // repeated double z = 3;
  for (int i = 0; i < this->z_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->z(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polysim.SPolymer)
  return target;
}

int SPolymer::ByteSize() const {
  int total_size = 0;

  // repeated double x = 1;
  {
    int data_size = 0;
    data_size = 8 * this->x_size();
    total_size += 1 * this->x_size() + data_size;
  }

  // repeated double y = 2;
  {
    int data_size = 0;
    data_size = 8 * this->y_size();
    total_size += 1 * this->y_size() + data_size;
  }

  // repeated double z = 3;
  {
    int data_size = 0;
    data_size = 8 * this->z_size();
    total_size += 1 * this->z_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SPolymer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SPolymer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SPolymer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SPolymer::MergeFrom(const SPolymer& from) {
  GOOGLE_CHECK_NE(&from, this);
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SPolymer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPolymer::CopyFrom(const SPolymer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPolymer::IsInitialized() const {

  return true;
}

void SPolymer::Swap(SPolymer* other) {
  if (other != this) {
    x_.Swap(&other->x_);
    y_.Swap(&other->y_);
    z_.Swap(&other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SPolymer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SPolymer_descriptor_;
  metadata.reflection = SPolymer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SSystem::kPolyFieldNumber;
#endif  // !_MSC_VER

SSystem::SSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polysim.SSystem)
}

void SSystem::InitAsDefaultInstance() {
}

SSystem::SSystem(const SSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polysim.SSystem)
}

void SSystem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSystem::~SSystem() {
  // @@protoc_insertion_point(destructor:polysim.SSystem)
  SharedDtor();
}

void SSystem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSystem_descriptor_;
}

const SSystem& SSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_polysim_2eproto();
  return *default_instance_;
}

SSystem* SSystem::default_instance_ = NULL;

SSystem* SSystem::New() const {
  return new SSystem;
}

void SSystem::Clear() {
  poly_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polysim.SSystem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .polysim.SPolymer poly = 1;
      case 1: {
        if (tag == 10) {
         parse_poly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poly()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_poly;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polysim.SSystem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polysim.SSystem)
  return false;
#undef DO_
}

void SSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polysim.SSystem)
  // repeated .polysim.SPolymer poly = 1;
  for (int i = 0; i < this->poly_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->poly(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polysim.SSystem)
}

::google::protobuf::uint8* SSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polysim.SSystem)
  // repeated .polysim.SPolymer poly = 1;
  for (int i = 0; i < this->poly_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->poly(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polysim.SSystem)
  return target;
}

int SSystem::ByteSize() const {
  int total_size = 0;

  // repeated .polysim.SPolymer poly = 1;
  total_size += 1 * this->poly_size();
  for (int i = 0; i < this->poly_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->poly(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSystem::MergeFrom(const SSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  poly_.MergeFrom(from.poly_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSystem::CopyFrom(const SSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSystem::IsInitialized() const {

  return true;
}

void SSystem::Swap(SSystem* other) {
  if (other != this) {
    poly_.Swap(&other->poly_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSystem_descriptor_;
  metadata.reflection = SSystem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SSim::kSystemFieldNumber;
const int SSim::kYolkFieldNumber;
const int SSim::kSettingsFieldNumber;
#endif  // !_MSC_VER

SSim::SSim()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polysim.SSim)
}

void SSim::InitAsDefaultInstance() {
  settings_ = const_cast< ::polysim::Settings*>(&::polysim::Settings::default_instance());
}

SSim::SSim(const SSim& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polysim.SSim)
}

void SSim::SharedCtor() {
  _cached_size_ = 0;
  settings_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SSim::~SSim() {
  // @@protoc_insertion_point(destructor:polysim.SSim)
  SharedDtor();
}

void SSim::SharedDtor() {
  if (this != default_instance_) {
    delete settings_;
  }
}

void SSim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSim_descriptor_;
}

const SSim& SSim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_polysim_2eproto();
  return *default_instance_;
}

SSim* SSim::default_instance_ = NULL;

SSim* SSim::New() const {
  return new SSim;
}

void SSim::Clear() {
  if (has_settings()) {
    if (settings_ != NULL) settings_->::polysim::Settings::Clear();
  }
  system_.Clear();
  yolk_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SSim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polysim.SSim)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .polysim.SSystem system = 1;
      case 1: {
        if (tag == 10) {
         parse_system:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_system()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_system;
        if (input->ExpectTag(18)) goto parse_settings;
        break;
      }

      // required .polysim.Settings settings = 2;
      case 2: {
        if (tag == 18) {
         parse_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_yolk;
        break;
      }

      // repeated .polysim.SPolymer yolk = 3;
      case 3: {
        if (tag == 26) {
         parse_yolk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yolk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_yolk;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polysim.SSim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polysim.SSim)
  return false;
#undef DO_
}

void SSim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polysim.SSim)
  // repeated .polysim.SSystem system = 1;
  for (int i = 0; i < this->system_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->system(i), output);
  }

  // required .polysim.Settings settings = 2;
  if (has_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->settings(), output);
  }

  // repeated .polysim.SPolymer yolk = 3;
  for (int i = 0; i < this->yolk_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->yolk(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polysim.SSim)
}

::google::protobuf::uint8* SSim::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polysim.SSim)
  // repeated .polysim.SSystem system = 1;
  for (int i = 0; i < this->system_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->system(i), target);
  }

  // required .polysim.Settings settings = 2;
  if (has_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->settings(), target);
  }

  // repeated .polysim.SPolymer yolk = 3;
  for (int i = 0; i < this->yolk_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->yolk(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polysim.SSim)
  return target;
}

int SSim::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // required .polysim.Settings settings = 2;
    if (has_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->settings());
    }

  }
  // repeated .polysim.SSystem system = 1;
  total_size += 1 * this->system_size();
  for (int i = 0; i < this->system_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->system(i));
  }

  // repeated .polysim.SPolymer yolk = 3;
  total_size += 1 * this->yolk_size();
  for (int i = 0; i < this->yolk_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yolk(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSim::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SSim* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SSim*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SSim::MergeFrom(const SSim& from) {
  GOOGLE_CHECK_NE(&from, this);
  system_.MergeFrom(from.system_);
  yolk_.MergeFrom(from.yolk_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_settings()) {
      mutable_settings()->::polysim::Settings::MergeFrom(from.settings());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SSim::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSim::CopyFrom(const SSim& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSim::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  if (has_settings()) {
    if (!this->settings().IsInitialized()) return false;
  }
  return true;
}

void SSim::Swap(SSim* other) {
  if (other != this) {
    system_.Swap(&other->system_);
    yolk_.Swap(&other->yolk_);
    std::swap(settings_, other->settings_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SSim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSim_descriptor_;
  metadata.reflection = SSim_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Settings::kHFieldNumber;
const int Settings::kSkFieldNumber;
const int Settings::kPkFieldNumber;
const int Settings::kStiffkFieldNumber;
const int Settings::kShiftkFieldNumber;
const int Settings::kOseenkFieldNumber;
const int Settings::kBasekFieldNumber;
const int Settings::kNumpinFieldNumber;
#endif  // !_MSC_VER

Settings::Settings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:polysim.Settings)
}

void Settings::InitAsDefaultInstance() {
}

Settings::Settings(const Settings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:polysim.Settings)
}

void Settings::SharedCtor() {
  _cached_size_ = 0;
  h_ = 0;
  sk_ = 0;
  pk_ = 0;
  stiffk_ = 0;
  shiftk_ = 0;
  oseenk_ = 0;
  basek_ = 0;
  numpin_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:polysim.Settings)
  SharedDtor();
}

void Settings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Settings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Settings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Settings_descriptor_;
}

const Settings& Settings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_polysim_2eproto();
  return *default_instance_;
}

Settings* Settings::default_instance_ = NULL;

Settings* Settings::New() const {
  return new Settings;
}

void Settings::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Settings*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(h_, numpin_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Settings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:polysim.Settings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double sk = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sk_)));
          set_has_sk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_pk;
        break;
      }

      // required double pk = 2;
      case 2: {
        if (tag == 17) {
         parse_pk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pk_)));
          set_has_pk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_stiffk;
        break;
      }

      // required double stiffk = 3;
      case 3: {
        if (tag == 25) {
         parse_stiffk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stiffk_)));
          set_has_stiffk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_shiftk;
        break;
      }

      // required double shiftk = 4;
      case 4: {
        if (tag == 33) {
         parse_shiftk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shiftk_)));
          set_has_shiftk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_oseenk;
        break;
      }

      // required double oseenk = 5;
      case 5: {
        if (tag == 41) {
         parse_oseenk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oseenk_)));
          set_has_oseenk();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_basek;
        break;
      }

      // required double basek = 6;
      case 6: {
        if (tag == 49) {
         parse_basek:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &basek_)));
          set_has_basek();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_numpin;
        break;
      }

      // required int32 numpin = 7;
      case 7: {
        if (tag == 56) {
         parse_numpin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numpin_)));
          set_has_numpin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_h;
        break;
      }

      // required double h = 8;
      case 8: {
        if (tag == 65) {
         parse_h:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &h_)));
          set_has_h();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:polysim.Settings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:polysim.Settings)
  return false;
#undef DO_
}

void Settings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:polysim.Settings)
  // required double sk = 1;
  if (has_sk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->sk(), output);
  }

  // required double pk = 2;
  if (has_pk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pk(), output);
  }

  // required double stiffk = 3;
  if (has_stiffk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->stiffk(), output);
  }

  // required double shiftk = 4;
  if (has_shiftk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->shiftk(), output);
  }

  // required double oseenk = 5;
  if (has_oseenk()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->oseenk(), output);
  }

  // required double basek = 6;
  if (has_basek()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->basek(), output);
  }

  // required int32 numpin = 7;
  if (has_numpin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->numpin(), output);
  }

  // required double h = 8;
  if (has_h()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->h(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:polysim.Settings)
}

::google::protobuf::uint8* Settings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:polysim.Settings)
  // required double sk = 1;
  if (has_sk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->sk(), target);
  }

  // required double pk = 2;
  if (has_pk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pk(), target);
  }

  // required double stiffk = 3;
  if (has_stiffk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->stiffk(), target);
  }

  // required double shiftk = 4;
  if (has_shiftk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->shiftk(), target);
  }

  // required double oseenk = 5;
  if (has_oseenk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->oseenk(), target);
  }

  // required double basek = 6;
  if (has_basek()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->basek(), target);
  }

  // required int32 numpin = 7;
  if (has_numpin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->numpin(), target);
  }

  // required double h = 8;
  if (has_h()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->h(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:polysim.Settings)
  return target;
}

int Settings::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double h = 8;
    if (has_h()) {
      total_size += 1 + 8;
    }

    // required double sk = 1;
    if (has_sk()) {
      total_size += 1 + 8;
    }

    // required double pk = 2;
    if (has_pk()) {
      total_size += 1 + 8;
    }

    // required double stiffk = 3;
    if (has_stiffk()) {
      total_size += 1 + 8;
    }

    // required double shiftk = 4;
    if (has_shiftk()) {
      total_size += 1 + 8;
    }

    // required double oseenk = 5;
    if (has_oseenk()) {
      total_size += 1 + 8;
    }

    // required double basek = 6;
    if (has_basek()) {
      total_size += 1 + 8;
    }

    // required int32 numpin = 7;
    if (has_numpin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->numpin());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Settings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Settings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Settings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Settings::MergeFrom(const Settings& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_h()) {
      set_h(from.h());
    }
    if (from.has_sk()) {
      set_sk(from.sk());
    }
    if (from.has_pk()) {
      set_pk(from.pk());
    }
    if (from.has_stiffk()) {
      set_stiffk(from.stiffk());
    }
    if (from.has_shiftk()) {
      set_shiftk(from.shiftk());
    }
    if (from.has_oseenk()) {
      set_oseenk(from.oseenk());
    }
    if (from.has_basek()) {
      set_basek(from.basek());
    }
    if (from.has_numpin()) {
      set_numpin(from.numpin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Settings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Settings::CopyFrom(const Settings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void Settings::Swap(Settings* other) {
  if (other != this) {
    std::swap(h_, other->h_);
    std::swap(sk_, other->sk_);
    std::swap(pk_, other->pk_);
    std::swap(stiffk_, other->stiffk_);
    std::swap(shiftk_, other->shiftk_);
    std::swap(oseenk_, other->oseenk_);
    std::swap(basek_, other->basek_);
    std::swap(numpin_, other->numpin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Settings_descriptor_;
  metadata.reflection = Settings_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace polysim

// @@protoc_insertion_point(global_scope)
